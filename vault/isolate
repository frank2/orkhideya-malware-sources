#!/bin/bash

source orkhideya
ork_include malware
ork_include stdout
ork_include stdlib

_filename="$1"
[ ! -r "$_filename" ] && exit 1

stdout_warning "Isolating $(stdout_color_wrap main-focused "$_filename") for storage in the vault."

_md5="$(malware_md5sum "$_filename")"
_sha1="$(malware_sha1sum "$_filename")"
_sha256="$(malware_sha256sum "$_filename")"
_class="$(malware_classify "$_filename")"

stdout_normal "Class:  $(stdout_color_wrap main-focused "$_class")"
stdout_normal "MD5:    $(stdout_color_wrap main-focused "$_md5")"
stdout_normal "SHA1:   $(stdout_color_wrap main-focused "$_sha1")"
stdout_normal "SHA256: $(stdout_color_wrap main-focused "$_sha256")"

_md5_path="$(malware_vault)/md5/${_md5:0:1}/${_md5:1:2}"
_sha1_path="$(malware_vault)/sha1/${_sha1:0:1}/${_sha1:1:2}"
_sha256_path="$(malware_vault)/sha256/${_sha256:0:1}/${_sha256:1:2}"
_class_path="$(malware_vault)/class/$_class"

_sha256_file="$_sha256_path/$_sha256"
[ -r "$_sha256_file" ] && exit 2

_md5_link="$_md5_path/$_md5"
_sha1_link="$_sha1_path/$_sha1"
_class_link="$_class_path/$_class"

_archive_path="$(stdlib_tmpfile malware-isolation-$_sha256)"
_archive_file="$_archive_path/$_sha256"
_zip_file="$_archive_path/archive.zip"
! mkdir -p "$_archive_path" && exit 3
! cp "$_filename" "$_archive_file" && exit 4

pushd "$_archive_path" &>/dev/null
zip -P "$(malware_password)" "$_zip_file" ./* &>/dev/null
_zip_status="$?"
popd &>/dev/null

if [ "$_zip_status" != "0" ]; then
   rm -rf "$_archive_path"
   exit 5
fi

mkdir -p "$_sha256_path"
mv "$_zip_file" "$_sha256_file"

mkdir -p "$_md5_path"
ln -s "$_sha256_file" "$_md5_path/$_md5"

mkdir -p "$_sha1_path"
ln -s "$_sha256_file" "$_sha1_path/$_sha1"

mkdir -p "$_class_path"
ln -s "$_sha256_file" "$_class_path/$_sha256"

rm -rf "$_archive_path"
rm -rf "$_filename"

stdout_normal "Sample has been isolated."

exit 0
